#
# NOTE: THIS DOCKERFILE IS GENERATED VIA "apply-templates.sh"
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#
# Copied from https://raw.githubusercontent.com/docker-library/python/refs/heads/master/3.13/windows/windowsservercore-ltsc2025/Dockerfile

#FROM mcr.microsoft.com/windows/servercore:ltsc2019
FROM mcr.microsoft.com/windows/nanoserver:ltsc2019
#https://hub.docker.com/r/microsoft/windows-nanoserver

SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

# https://github.com/docker-library/python/pull/557
ENV PYTHONIOENCODING UTF-8

ENV PYTHON_VERSION 3.9.13
ENV PYTHON_SHA256 5edce6f0597a9b250c72790dc076649b06c1dc4754f3c68d7c284a1f10c33f36

## Install PowerShell below
# Download and install PowerShell
ADD https://github.com/PowerShell/PowerShell/releases/download/v7.3.6/PowerShell-7.3.6-win-x64.zip C:\PowerShell.zip

# Extract PowerShell
RUN tar -xf C:\PowerShell.zip -C C:\PowerShell

# Clean up zip file
RUN del C:\PowerShell.zip

# Add PowerShell to PATH
RUN setx PATH "C:\PowerShell;%PATH%" /M

# Set PowerShell as default shell
SHELL ["C:\\PowerShell\\pwsh.exe", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

# Test PowerShell installation
RUN Write-Host "PowerShell installed successfully" -ForegroundColor Green

## Install PowerShell above

# Removed SHA verification for now.Need to find the SHA and change the env variable
RUN $url = ('https://www.python.org/ftp/python/{0}/python-{1}-amd64.exe' -f ($env:PYTHON_VERSION -replace '[a-z]+[0-9]*$', ''), $env:PYTHON_VERSION); \
Write-Host ('Downloading {0} ...' -f $url); \
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \
Invoke-WebRequest -Uri $url -OutFile 'python.exe'; \
\
Write-Host 'Installing ...'; \
# https://docs.python.org/3/using/windows.html#installing-without-ui
$exitCode = (Start-Process python.exe -Wait -NoNewWindow -PassThru \
	-ArgumentList @( \
		'/quiet', \
		'InstallAllUsers=1', \
		'TargetDir=C:\Python', \
		'PrependPath=1', \
		'Shortcuts=0', \
		'Include_doc=0', \
		'Include_pip=1', \
		'Include_test=0' \
	) \
).ExitCode; \
if ($exitCode -ne 0) {
 \
	Write-Host ('Running python installer failed with exit code: {0}' -f $exitCode); \
	Get-ChildItem $env:TEMP | Sort-Object -Descending -Property LastWriteTime | Select-Object -First 1 | Get-Content; \
	exit $exitCode; \
} \
\
# the installer updated PATH, so we should refresh our local value
$env:PATH = [Environment]::GetEnvironmentVariable('PATH', [EnvironmentVariableTarget]::Machine); \
\
Write-Host 'Verifying install ...'; \
Write-Host '  python --version'; python --version; \
\
Write-Host 'Removing ...'; \
Remove-Item python.exe -Force; \
Remove-Item $env:TEMP/Python*.log -Force; \
\
$env:PYTHONDONTWRITEBYTECODE = '1'; \
\
Write-Host 'Verifying pip install ...'; \
pip --version; \
\
Write-Host 'Complete.'

# Install PowerShell 7 on Nano Server
Write-Host 'Installing PowerShell 7 ...'; \
$pwshUrl = 'https://github.com/PowerShell/PowerShell/releases/download/v7.3.6/PowerShell-7.3.6-win-x64.zip'; \
Write-Host ('Downloading PowerShell from {0} ...' -f $pwshUrl); \
Invoke-WebRequest -Uri $pwshUrl -OutFile 'PowerShell.zip'; \
\
Write-Host 'Extracting PowerShell ...'; \
Expand-Archive -Path 'PowerShell.zip' -DestinationPath 'C:\PowerShell' -Force; \
Remove-Item 'PowerShell.zip' -Force; \
\
Write-Host 'Adding PowerShell to PATH ...'; \
$newPath = 'C:\PowerShell;' + $env:PATH; \
[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine); \
$env:PATH = $newPath; \
\
Write-Host 'Verifying PowerShell installation ...'; \
& 'C:\PowerShell\pwsh.exe' -c 'Get-Host | Select-Object Name, Version'; \
\
Write-Host 'PowerShell installation complete.'

CMD ["python"]